plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.4'
	id 'io.spring.dependency-management' version '1.1.7'
    id 'io.freefair.lombok' version '6.6.1'
    id 'jacoco'
}

group = 'com.champlain.enrollmentsservice'
version = '1.0.0-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(19)
	}
}

repositories {
	mavenCentral()
}

ext {
    mapstructVersion = "1.6.3"
    lombokVersion = "1.18.32"
    lombokMapstructBindingVersion = "0.2.0"
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    //implementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo.spring3x:4.16.1'
    developmentOnly 'de.flapdoodle.embed:de.flapdoodle.embed.mongo.spring3x:4.21.0'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    implementation "org.projectlombok:lombok:${lombokVersion}"
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo.spring3x:4.21.0'
    //implementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo:4.16.1'
    //testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo:4.12.2'
    testImplementation 'io.projectreactor:reactor-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

jacoco {
    toolVersion = "0.8.13"
}

jacocoTestReport {
    dependsOn test

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    //"com/petclinic/**/BillingServiceApplication.class"
            ])
        }))
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.00
            }
        }
    }
}

test.finalizedBy jacocoTestReport
check.dependsOn jacocoTestCoverageVerification

test {
    jvmArgs '--enable-preview'
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}


